/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/activeCases.js":
/*!*******************************!*\
  !*** ./src/js/activeCases.js ***!
  \*******************************/
/*! exports provided: getActiveCases */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getActiveCases\", function() { return getActiveCases; });\n\r\nlet getActiveCases = async () => {\r\n    const el = document.getElementsByClassName('mapboxgl-ctrl-geocoder');\r\n    const src = el[0].childNodes[1].value;\r\n    const dest = el[1].childNodes[1].value;\r\n\r\n    let srcTokens = src.split(',');\r\n    for (let i = 0; i < srcTokens.length; i++) {\r\n        srcTokens[i] = srcTokens[i].trim();\r\n    }\r\n\r\n    let srcState = srcTokens[srcTokens.length - 2];\r\n    // console.log(srcTokens);\r\n\r\n    let destTokens = dest.split(',');\r\n    for (let i = 0; i < destTokens.length; i++) {\r\n        destTokens[i] = destTokens[i].trim();\r\n    }\r\n\r\n    let destState = destTokens[destTokens.length - 2];\r\n    // console.log(destTokens);\r\n\r\n\r\n    let casesData = await fetch('https://api.covid19india.org/data.json');\r\n\r\n    casesData = await casesData.json();\r\n\r\n\r\n    //if src and dest are Chandigarh Capital, Dadra and Nagar Haveli and Daman and Diu\r\n    if (srcState === \"Chandigarh capital\") {\r\n        srcState = \"Chandigarh\";\r\n    }\r\n    if (srcState === \"Daman and Diu\" || srcState === \"Dadra and Nagar Haveli\") {\r\n        srcState = \"Dadra and Nagar Haveli and Daman and Diu\";\r\n    }\r\n\r\n    if (destState === \"Chandigarh capital\") {\r\n        destState = \"Chandigarh\";\r\n    }\r\n    if (destState === \"Daman and Diu\" || destState === \"Dadra and Nagar Haveli\") {\r\n        destState = \"Dadra and Nagar Haveli and Daman and Diu\";\r\n    }\r\n\r\n\r\n    let srcActiveCases = 0, destActiveCases = 0;\r\n\r\n    for (let i = 1; i < 38; i++) {\r\n        const obj = casesData.statewise[i];\r\n        if (obj.state.toLowerCase() === srcState.toLowerCase()) {\r\n            srcActiveCases = obj.active;\r\n        }\r\n\r\n        if (obj.state.toLowerCase() === destState.toLowerCase()) {\r\n            destActiveCases = obj.active;\r\n        }\r\n\r\n    }\r\n\r\n    let cases = [srcState, srcActiveCases, destState, destActiveCases];\r\n    return cases;\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/activeCases.js?");

/***/ }),

/***/ "./src/js/authentication.js":
/*!**********************************!*\
  !*** ./src/js/authentication.js ***!
  \**********************************/
/*! exports provided: initApp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initApp\", function() { return initApp; });\nvar firebaseConfig = {\r\n            apiKey: \"AIzaSyA33Udlq8psM8SiNN9zB9AtVg8eHAtuFiE\",\r\n            authDomain: \"excaliber-87adf.firebaseapp.com\",\r\n            databaseURL: \"https://excaliber-87adf.firebaseio.com\",\r\n            projectId: \"excaliber-87adf\",\r\n            storageBucket: \"excaliber-87adf.appspot.com\",\r\n            messagingSenderId: \"143499356337\",\r\n            appId: \"1:143499356337:web:5426b346158cda00b3da90\",\r\n            measurementId: \"G-7VT848HZDE\"\r\n          };\r\n          // Initialize Firebase\r\n          firebase.initializeApp(firebaseConfig);\r\n          firebase.analytics();\r\n            \r\n          \r\n            \r\n         function toggleSignIn() {\r\n          if (firebase.auth().currentUser) {\r\n            firebase.auth().signOut();\r\n          } else {\r\n            var email = document.getElementById('email').value;\r\n            var password = document.getElementById('password').value;\r\n            if (email.length < 4) {\r\n              alert('Please enter an email address.');\r\n              return;\r\n            }\r\n            if (password.length < 4) {\r\n              alert('Please enter a password.');\r\n              return;\r\n            }\r\n            // Sign in with email and pass.\r\n            firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n              // Handle Errors here.\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n              if (errorCode === 'auth/wrong-password') {\r\n                alert('Wrong password.');\r\n              } else {\r\n                alert(errorMessage);\r\n              }\r\n              console.log(error);\r\n              document.getElementById('quickstart-sign-in').disabled = false;\r\n            });\r\n          }\r\n          document.getElementById('quickstart-sign-in').disabled = true;\r\n        }\r\n            \r\n            \r\n        function handleSignUp() {\r\n          var email = document.getElementById('email').value;\r\n          var password = document.getElementById('password').value;\r\n          if (email.length < 4) {\r\n            alert('Please enter an email address.');\r\n            return;\r\n          }\r\n          if (password.length < 4) {\r\n            alert('Please enter a password.');\r\n            return;\r\n          }\r\n          // Create user with email and pass.\r\n          firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            if (errorCode == 'auth/weak-password') {\r\n              alert('The password is too weak.');\r\n            } else {\r\n              alert(errorMessage);\r\n            }\r\n            console.log(error);\r\n          });\r\n        }\r\n\r\n        \r\n        function sendEmailVerification() {\r\n          firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n            // Email Verification sent!\r\n            alert('Email Verification Sent!');\r\n          });\r\n        }\r\n         \r\n        \r\n        \r\n        function sendPasswordReset() {\r\n          var email = document.getElementById('email').value;\r\n          firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n            // Password Reset Email Sent!\r\n            alert('Password Reset Email Sent!');\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            if (errorCode == 'auth/invalid-email') {\r\n              alert(errorMessage);\r\n            } else if (errorCode == 'auth/user-not-found') {\r\n              alert(errorMessage);\r\n            }\r\n            console.log(error);\r\n          });\r\n        }\r\n            \r\n        \r\n      function initApp() {\r\n          console.log(\"init app function called\");\r\n          // Listening for auth state changes.\r\n          firebase.auth().onAuthStateChanged(function(user) {\r\n            document.getElementById('quickstart-verify-email').disabled = true;\r\n            if (user) {\r\n              // User is signed in.\r\n              var displayName = user.displayName;\r\n              var email = user.email;\r\n              var emailVerified = user.emailVerified;\r\n              var photoURL = user.photoURL;\r\n              var isAnonymous = user.isAnonymous;\r\n              var uid = user.uid;\r\n              var providerData = user.providerData;\r\n              //document.getElementById('quickstart-sign-in-status').textContent = 'Signed in';\r\n              document.getElementById('quickstart-sign-in').textContent = 'Sign out';\r\n          //   document.getElementById('quickstart-account-details').textContent = JSON.stringify(user, null, '  ');\r\n              if (!emailVerified) {\r\n                document.getElementById('quickstart-verify-email').disabled = false;\r\n              }\r\n            } else {\r\n              // User is signed out.\r\n             // document.getElementById('quickstart-sign-in-status').textContent = 'Signed out';\r\n              document.getElementById('quickstart-sign-in').textContent = 'Sign in';\r\n              //document.getElementById('quickstart-account-details').textContent = 'null';\r\n            }\r\n            document.getElementById('quickstart-sign-in').disabled = false;\r\n          });\r\n          // [END authstatelistener]\r\n\r\n          document.getElementById('quickstart-sign-in').addEventListener('click', toggleSignIn, false);\r\n          document.getElementById('quickstart-sign-up').addEventListener('click', handleSignUp, false);\r\n          document.getElementById('quickstart-verify-email').addEventListener('click', sendEmailVerification, false);\r\n          document.getElementById('quickstart-password-reset').addEventListener('click', sendPasswordReset, false);\r\n        }\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/authentication.js?");

/***/ }),

/***/ "./src/js/contZones.js":
/*!*****************************!*\
  !*** ./src/js/contZones.js ***!
  \*****************************/
/*! exports provided: red_zone, orange_zone, green_zone, red_clearances, orange_clearances, green_clearances, getContaimentZones, getGeocodedDistrict, toggleRedZones, toggleOrangeZones, toggleGreenZones */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"red_zone\", function() { return red_zone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orange_zone\", function() { return orange_zone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"green_zone\", function() { return green_zone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"red_clearances\", function() { return red_clearances; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orange_clearances\", function() { return orange_clearances; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"green_clearances\", function() { return green_clearances; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContaimentZones\", function() { return getContaimentZones; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGeocodedDistrict\", function() { return getGeocodedDistrict; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleRedZones\", function() { return toggleRedZones; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleOrangeZones\", function() { return toggleOrangeZones; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleGreenZones\", function() { return toggleGreenZones; });\nlet red_zone = {\r\n    type: \"FeatureCollection\",\r\n    features: []\r\n};\r\n\r\nlet orange_zone = {\r\n    type: \"FeatureCollection\",\r\n    features: []\r\n};\r\n\r\nlet green_zone = {\r\n    type: \"FeatureCollection\",\r\n    features: []\r\n};\r\n\r\n\r\n\r\n\r\nlet red_clearances = \"red_clearances\";\r\nlet orange_clearances = \"orange_clearances\";\r\nlet green_clearances = \"green_clearances\";\r\n\r\n\r\n/* Fetch Containment Zones */\r\nconst getContaimentZones = async () => {\r\n    const containmentZones = await fetch(`https://api.covid19india.org/zones.json`);\r\n    const containment_zones = await containmentZones.json();\r\n    await getGeocodedDistrict(containment_zones);\r\n}\r\n\r\n\r\nconst getGeocodedDistrict = async (containment_zones) => {\r\n    let mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });\r\n    \r\n    for (let i = 1; i < containment_zones.zones.length; i++) {\r\n        const district = JSON.stringify(containment_zones.zones[i].district);\r\n        await mapboxClient.geocoding.forwardGeocode({\r\n            query: district,\r\n            autocomplete: false,\r\n            limit: 1\r\n        })\r\n            .send()\r\n            .then(function (response) {\r\n                if (response.body.features[0] != undefined) {\r\n\r\n                    const zone_color = (containment_zones.zones[i].zone);\r\n                    if (zone_color === \"Red\") {\r\n\r\n\r\n                        red_zone.features.push({\r\n                            type: \"Feature\",\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: response.body.features[0].center,\r\n                            },\r\n                            properties: {\r\n                                clearance: \"13' 2\",\r\n                            },\r\n                        });\r\n\r\n\r\n                    }\r\n\r\n                    else if (zone_color === \"Orange\") {\r\n\r\n                        orange_zone.features.push({\r\n                            type: \"Feature\",\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: response.body.features[0].center,\r\n                            },\r\n                            properties: {\r\n                                clearance: \"13' 2\",\r\n                            },\r\n                        });\r\n\r\n                    }\r\n                    else if (zone_color === \"Green\") {\r\n\r\n                        green_zone.features.push({\r\n                            type: \"Feature\",\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: response.body.features[0].center,\r\n                            },\r\n                            properties: {\r\n                                clearance: \"13' 2\",\r\n                            },\r\n                        });\r\n\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nconst toggleRedZones = () => {\r\n    if (map.getLayoutProperty(red_clearances, 'visibility') == 'none') {\r\n        map.setLayoutProperty(red_clearances, 'visibility', 'visible');\r\n    }\r\n    else {\r\n        map.setLayoutProperty(red_clearances, 'visibility', 'none');\r\n    }\r\n}\r\n\r\nconst toggleOrangeZones = () => {\r\n    if (map.getLayoutProperty(orange_clearances, 'visibility') == 'none') {\r\n        map.setLayoutProperty(orange_clearances, 'visibility', 'visible');\r\n    }\r\n    else {\r\n        map.setLayoutProperty(orange_clearances, 'visibility', 'none');\r\n    }\r\n}\r\n\r\nconst toggleGreenZones = () => {\r\n    if (map.getLayoutProperty(green_clearances, 'visibility') == 'none') {\r\n        map.setLayoutProperty(green_clearances, 'visibility', 'visible');\r\n    }\r\n    else {\r\n        map.setLayoutProperty(green_clearances, 'visibility', 'none');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/js/contZones.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _activeCases__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activeCases */ \"./src/js/activeCases.js\");\n/* harmony import */ var _contZones__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contZones */ \"./src/js/contZones.js\");\n/* harmony import */ var _authentication__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authentication */ \"./src/js/authentication.js\");\n\r\n\r\n\r\n\r\n\r\nlet red_obstacle = {};\r\nlet orange_obstacle = {};\r\nlet green_obstacle = {};\r\n\r\ndocument.querySelector('#navmap-btn-red').addEventListener('click', () => {  \r\n    _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleRedZones\"]();    \r\n});\r\n\r\ndocument.querySelector('#navmap-btn-orange').addEventListener('click', () => {  \r\n    _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleOrangeZones\"]();    \r\n});\r\n\r\ndocument.querySelector('#navmap-btn-green').addEventListener('click', () => {  \r\n    _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleGreenZones\"]();    \r\n});\r\n\r\n\r\n/*To get containment zones */\r\nmap.on(\"load\", function (e) {\r\n\r\n    _contZones__WEBPACK_IMPORTED_MODULE_1__[\"getContaimentZones\"]().then(() => {\r\n\r\n        red_obstacle = turf.buffer(_contZones__WEBPACK_IMPORTED_MODULE_1__[\"red_zone\"], 30, { units: \"kilometers\" });\r\n        orange_obstacle = turf.buffer(_contZones__WEBPACK_IMPORTED_MODULE_1__[\"orange_zone\"], 30, { units: \"kilometers\" });\r\n        green_obstacle = turf.buffer(_contZones__WEBPACK_IMPORTED_MODULE_1__[\"green_zone\"], 30, { units: \"kilometers\" });\r\n\r\n\r\n        console.log('layer added');\r\n        map.addLayer({\r\n            id: _contZones__WEBPACK_IMPORTED_MODULE_1__[\"red_clearances\"],\r\n            type: \"fill\",\r\n            source: {\r\n                type: \"geojson\",\r\n                data: red_obstacle,\r\n            },\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": \"#FF0000\",\r\n                \"fill-opacity\": 0.8,\r\n                \"fill-outline-color\": \"#FF0000\",\r\n            },\r\n        });\r\n\r\n\r\n        map.addLayer({\r\n            id: _contZones__WEBPACK_IMPORTED_MODULE_1__[\"orange_clearances\"],\r\n            type: \"fill\",\r\n            source: {\r\n                type: \"geojson\",\r\n                data: orange_obstacle,\r\n            },\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": \"#ff4500\",\r\n                \"fill-opacity\": 0.8,\r\n                \"fill-outline-color\": \"#ff4500\",\r\n            },\r\n        });\r\n\r\n        map.addLayer({\r\n            id: _contZones__WEBPACK_IMPORTED_MODULE_1__[\"green_clearances\"],\r\n            type: \"fill\",\r\n            source: {\r\n                type: \"geojson\",\r\n                data: green_obstacle,\r\n            },\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": \"#74c476\",\r\n                \"fill-opacity\": 0.8,\r\n                \"fill-outline-color\": \"#74c476\",\r\n            },\r\n        });\r\n\r\n\r\n        _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleRedZones\"]();\r\n        _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleOrangeZones\"]();\r\n        _contZones__WEBPACK_IMPORTED_MODULE_1__[\"toggleGreenZones\"]();\r\n\r\n    });\r\n\r\n\r\n    /*For displaying routes */\r\n    for (let i = 0; i <= 2; i++) {\r\n        map.addSource(\"route\" + i, {\r\n            type: \"geojson\",\r\n            data: {\r\n                type: \"Feature\",\r\n            },\r\n        });\r\n\r\n        map.addLayer({\r\n            id: \"route\" + i,\r\n            type: \"line\",\r\n            source: \"route\" + i,\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": \"#cccccc\",\r\n                \"line-opacity\": 0.5,\r\n                \"line-width\": 13,\r\n                \"line-blur\": 0.5,\r\n            },\r\n        });\r\n    }\r\n\r\n    Object(_authentication__WEBPACK_IMPORTED_MODULE_2__[\"initApp\"])();\r\n\r\n});\r\n\r\n\r\n// For navigation\r\n\r\nvar nav = new mapboxgl.NavigationControl();\r\n\r\nvar directions = new MapboxDirections({\r\n    accessToken: mapboxgl.accessToken,\r\n    unit: \"metric\",\r\n    profile: \"mapbox/driving\",\r\n    alternatives: \"true\",\r\n    geometries: \"geojson\",\r\n});\r\n\r\nmap.scrollZoom.enable();\r\nmap.addControl(directions, \"top-right\");\r\n\r\n\r\n\r\ndirections.on(\"route\", (e) => {\r\n\r\n    // console.log('in direction1');\r\n    var reports = document.getElementById(\"reports\");\r\n    reports.innerHTML = \"\";\r\n    var report = reports.appendChild(document.createElement(\"div\"));\r\n    let routes = e.route;\r\n    report.className=\"item\";\r\n\r\n    //Hide all routes by setting the opacity to zero.\r\n    for (let i = 0; i < 3; i++) {\r\n        map.setLayoutProperty(\"route\" + i, \"visibility\", \"none\");\r\n    }\r\n\r\n    routes.forEach(function (route, i) {\r\n        route.id = i;\r\n    });\r\n\r\n    routes.forEach((e) => {\r\n        //Make each route visible, by setting the opacity to 50%.\r\n        map.setLayoutProperty(\"route\" + e.id, \"visibility\", \"visible\");\r\n\r\n        //Get GeoJson LineString feature of route\r\n        var routeLine = polyline.toGeoJSON(e.geometry);\r\n        // console.log(routeLine);\r\n        //Update the data for the route, updating the visual.\r\n        map.getSource(\"route\" + e.id).setData(routeLine);\r\n\r\n        var collision = \"\";\r\n        var emoji = \"\";\r\n        var red_danger = !(turf.booleanDisjoint(red_obstacle, routeLine));\r\n        var orange_danger = !(turf.booleanDisjoint(orange_obstacle, routeLine));\r\n        let detail;\r\n\r\n        // console.log('in direction2');\r\n\r\n        if (red_danger == true) {\r\n            collision = \"is bad.\";\r\n            detail = \"passes through a red zone. Avoid if possible\";\r\n            emoji = \":(\";\r\n            report.classList.add(\"warning\");\r\n            map.setPaintProperty(\"route\" + e.id, \"line-color\", \"#de2d26\");\r\n\r\n        }\r\n        else if (orange_danger == true) {\r\n            collision = \"is not good\";\r\n            detail = \"passes through an orange zone. Please take all the necessary precautions\";\r\n            emoji = \":(\";\r\n            report.classList.add(\"warning\");\r\n            map.setPaintProperty(\"route\" + e.id, \"line-color\", \"#ff4500\");\r\n        }\r\n        else {\r\n            collision = \"is good!\";\r\n            detail = \"does not pass through an orange or a red zone. Have a safe journey!\";\r\n            emoji = \"✔️\";\r\n            map.setPaintProperty(\"route\" + e.id, \"line-color\", \"#74c476\");\r\n        }\r\n\r\n        //Add a new report section to the sidebar.\r\n        // Assign a unique `id` to the report.\r\n        report.id = \"report-\" + e.id;\r\n\r\n        // Add the response to the individual report created above.\r\n\r\n        var heading = report.appendChild(document.createElement(\"h5\"));\r\n\r\n\r\n        // Set the class type based on clear value.\r\n        if (red_danger == true || orange_danger == true) {\r\n            heading.className = \"warning\";\r\n        } \r\n        else {\r\n            heading.className = \"title\";\r\n        }\r\n\r\n        heading.innerHTML = emoji + \" Route \" + (e.id + 1) + \" \" + collision;\r\n\r\n        // console.log('in direction3');\r\n\r\n        // Add details to the individual report.\r\n        var details = report.appendChild(document.createElement(\"div\"));\r\n        details.innerHTML = \"This route \" + detail;\r\n\r\n        report.appendChild(document.createElement(\"p\"));\r\n\r\n\r\n    });\r\n\r\n\r\n    // console.log(\"reached\");\r\n    //To show active cases\r\n    let renderActiveCases = () => {\r\n        Object(_activeCases__WEBPACK_IMPORTED_MODULE_0__[\"getActiveCases\"])().then((cases) => {\r\n            let report = reports.appendChild(document.createElement(\"div\"));\r\n            report.className = \"item\";\r\n            report.id = \"navMap-report\";\r\n\r\n            let heading = report.appendChild(document.createElement(\"h5\"));\r\n\r\n\r\n            heading.innerHTML = \"Active Cases: \";\r\n            heading.className = \"navMap-casesHead\";\r\n\r\n            let details = report.appendChild(document.createElement(\"div\"));\r\n            details.innerHTML = cases[0] + \" : \" + cases[1];    //src\r\n            details = report.appendChild(document.createElement(\"div\"));\r\n            details.innerHTML = cases[2] + \" : \" + cases[3];    //dest\r\n\r\n            report.appendChild(document.createElement(\"p\"));\r\n\r\n        });\r\n    }\r\n\r\n    renderActiveCases();\r\n\r\n});\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ })

/******/ });